import React, { Component } from 'react';
import { Container, StyleSheet, View, ScrollView, Alert, Text, ActivityIndicator, Orientation } from 'react-native';
import {H2, H3, Card, CardItem, Right, Body} from 'native-base';
import { colors, fontSize } from "../Styles/styles";
import Video from 'react-native-af-video-player';
import { Query } from "react-apollo";
import Setting from '../Configs/settings';
import gql from "graphql-tag";
import Layout from '../Components/Layout';

const styles = StyleSheet.create({
  container: {
    flex: 1
  }
});

const PostQuery = gql`
query Post($id: ID!) {
  post(id: $id) {
    title,
    body,
    image,
    video
	}
}
`;

export default class ReactNavigationExample extends Component {

  constructor() {
    super();
    this.state = {
      fullScreen: false
    };
    this.var = true;
  }



  static navigationOptions = ({ navigation }) => {

    const { state } = navigation;
    const header = null//state.params && (state.params.fullscreen ? null : undefined);
    return {
      header,
    };
  }

  fullScreenHandler(status) {

    //  this.setState({ fullScreen: true }, () => {
    //    this.props.onFullScreen(this.state.fullScreen);
    //    if (this.props.rotateToFullScreen) Orientation.lockToLandscape();
    //  });


    //await this.setState({fullScreen: status});
  }

  render() {
    const id = this.props.navigation.getParam('id', 0);

    return (

      <Layout>
        <Query query={PostQuery} variables={{id}}>
          {({ loading, error, data }) => {
            if (loading) return <ActivityIndicator color={colors.teal} />;
            if (error) return <Text>OH OH :{`Error: ${error}`}</Text>;
            return (
              <ScrollView style={{flex: 1}}>

                <Card>
                  <CardItem>

                    <View>
                      <Right>
                        <H2>
                          {data.post.title}
                        </H2>
                      </Right>
                    </View>
                  </CardItem>
                </Card>


                <Video
                  key={data.post.title}
                  url={Setting.serverMainPath + data.post.video.url}
                  placeholder={Setting.serverMainPath + data.post.image.url}
                  logo={Setting.serverMainPath + data.post.image.url}
                  title={data.post.title}
                  onFullScreen={fullScreen => this.fullScreenHandler(fullScreen)}
                  rotateToFullScreen
                />


                <Card>
                  <CardItem>


                    <View >

                      {data.post.desc}
                    </View>
                  </CardItem>
                </Card>
              </ScrollView>
            );
          }}
        </Query>
      </Layout>
    );
  }
}




/////////////////////////////
        <ScrollView style={{flex: 1}}>
          <Container>

            {Object.keys(this.state).length > 0 ? <Text>here</Text> : null }
                  <Video
                    autoPlay
                    url={url}
                    title={title}
                    logo={logo}
                    placeholder={logo}
                    onFullScreen={status => this.onFullScreen(status)}
                    rotateToFullScreen
                  />
                </Container>
              </ScrollView>